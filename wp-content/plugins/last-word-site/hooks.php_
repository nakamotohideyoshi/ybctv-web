<?php
/**
 * Add ajaxurl
 */
add_action( 'wp_enqueue_scripts', 'latword_enqueue_script' );
 
function latword_enqueue_script(){
    $localize = array('ajaxurl'=> admin_url().'admin-ajax.php');
    wp_localize_script('jquery','lastword',$localize);
}

/**
 * Hook profile update, and send updated to CRM via API
 */
add_action( 'profile_update', 'process_member_update', 10, 2 );

function process_member_update( $user_id, $old_user_data ) {
	
	$user = get_user_by( 'ID', $user_id );
	
	if( $user ){
		
		$contactId = get_user_meta( $user_id, '_contactId', true );
		$company_name = get_user_meta( $user_id, '_company_name', true );
		$job_title = get_user_meta( $user_id, '_job_title', true );
		$country = get_user_meta( $user_id, '_country', true );
		$direct_line = get_user_meta( $user_id, '_direct_line', true );
		$description = get_user_meta( $user_id, '_description', true );
		
		$args=array(
			'firstname' => $user->first_name,
			'lastname' =>  $user->last_name,
			'emailaddress1' => $user->user_email,
			'company' => $company_name,
			'jobtitle' => $job_title,
			'address1_country' => $country,
			'telephone1' => $direct_line,
			'description' => $description,
		);
		$result = dynamic365_update_contact($contactId, $args);

		// if( $result ) echo "updated"; else echo "failed";
	}
}

/**
 * ajax update user profile
 */
add_action( 'wp_ajax_update_user_profile', 'update_user_profile' );
add_action( 'wp_ajax_nopriv_update_user_profile', 'update_user_profile' );
 
function update_user_profile(){
     if ( isset($_REQUEST) ){//&& wp_verify_nonce( $_POST['wp_nonce'], 'update_key_interest' )  ) {
       $contactId = $_REQUEST['contact_id'];

		$args=array(
				'firstname' => $_REQUEST['first_name'],
				'lastname' => $_REQUEST['last_name'],
				'emailaddress1' =>  $_REQUEST['email_address'],
				'telephone1' => $_REQUEST['telephone'],
			);
		$result = dynamic365_update_contact($contactId, $args);

		if( $result ) echo "updated"; else echo "failed";
         
        die();
    }
}

/**
 * Ajax update key interest
 */
add_action( 'wp_ajax_update_key_interest', 'update_key_interest' );
add_action( 'wp_ajax_nopriv_update_key_interest', 'update_key_interest' );
 
function update_key_interest(){
    if ( isset($_REQUEST) ){//&& wp_verify_nonce( $_POST['wp_nonce'], 'update_key_interest' )  ) {
        $curr_val = $_REQUEST['curr_val'];
		$contactId = $_REQUEST['contactId'];
		$new_status = $curr_val ? 0 : 1;
		$response['new_status']=$curr_val;
		echo json_encode($response);
         
        die();
    }
}

/**
 * Ajax update your subscriptions
 */
add_action( 'wp_ajax_update_your_subscription', 'update_your_subscription' );
add_action( 'wp_ajax_nopriv_update_your_subscription', 'update_your_subscription' );
 
function update_your_subscription(){
    if ( isset($_REQUEST) ){//&& wp_verify_nonce( $_POST['wp_nonce'], 'update_key_interest' )  ) {
        $curr_val = $_REQUEST['curr_val'];
		$contactId = $_REQUEST['contactId'];
		$new_status = $curr_val=="true" ? 0 : 1;
		$response['new_status']=$new_status;
		echo json_encode($response);
         
        die();
    }
}

/**
 * Ajax update your subscriptions
 */
add_action( 'wp_ajax_update_your_activity', 'update_your_activity' );
add_action( 'wp_ajax_nopriv_update_your_activity', 'update_your_activity' );
 
function update_your_activity(){
	// die('tesr');
    if ( isset($_REQUEST) ){//&& wp_verify_nonce( $_POST['wp_nonce'], 'update_key_interest' )  ) {
        $timeSpent = $_REQUEST['timeSpent'];
		$url = $_REQUEST['url'];
		
		$current_user = wp_get_current_user();
		$post_id = url_to_postid($url);
		// $action ='';
		$action = "Viewed";
		$anchor =$url;
		
		if( is_home() || is_front_page() ){
			$anchor = 'Homepage';			
		}else if(is_page() || is_single()){				
			$title = $post->post_title;		
			$anchor = $title;
			
		}else if(is_archive()){
			$title = 'archive';
			$anchor = $title;
		}
				
			
		$obj_type = "page";
		
		$user_mail = $current_user->user_email;
		$current_user_id = $current_user->ID;
		$user = new WP_User($current_user_id);
		if (!empty($user->roles) && is_array($user->roles)) {
			foreach ($user->roles as $role)
				$user_role = $role;
		} else{
			$user_role="";
		}
		
		$post_title = $url;
		
		$current_user_display_name = $current_user->display_name;
	
		$hook = "wp_head $timeSpent";
		// $hook = $timeSpent;
		$description = "$action $obj_type : <a target='blank' href='$url'>$anchor</a>";
		
		ualpGetActivityLog($action, $obj_type, $post_id, $post_title, $hook, $description);
		
		// $new_status = $url=="true" ? 0 : 1;
		// $response['new_status']=$new_status;
		// echo json_encode($response);
         
        die();
    }
}

/**
 * Ajax update your subscriptions
 */
add_action( 'wp_ajax_save_post_article', 'save_post_article' );
add_action( 'wp_ajax_nopriv_save_post_article', 'save_post_article' );
 
function save_post_article(){
    if ( isset($_REQUEST) ){//&& wp_verify_nonce( $_POST['wp_nonce'], 'update_key_interest' )  ) {
		
		$user_id = get_current_user_id();
		$saved_articles = get_user_meta( $user_id, '_saved_articles', true );
        $post_id = $_REQUEST['post_id'];                    
		$saved = $_REQUEST['saved'];
		$saved_articles['id_'.$post_id] = $saved=="true" ? false : true;
		$new_status = $saved_articles['id_'.$post_id];
		$response['new_status']=$new_status;
		
		update_user_meta( $user_id, '_saved_articles', $saved_articles );
		
		echo json_encode($response);
         
        die();
    }
}

add_action('wp_footer', 'lastword_save_article');

function lastword_save_article(){
	if( is_single() ){
	?>
		<script>	

			jQuery(".save-article").on( 'click', function(e){// when a div is clicked my form cames to the interface  
				var curr_element = jQuery(this);
				var saved = curr_element.attr('saved');
				var post_id = curr_element.attr('post-id');
				
				var data = {
					action: 'save_post_article',
					'post_id': post_id,                    
					'saved': saved,                    
				};
				// alert(curr_val);
				if(saved=='true'){			
					curr_element.html('Save for later');
					curr_element.attr('saved', "false");
				}else{			
					curr_element.html('Unsave this post');
					curr_element.attr('saved', "true");
				}
				
				jQuery.ajax({
					  type: "POST",
					  url: lastword.ajaxurl,
					  timeout: 30000,
					  data : data,
					  cache: false,
					  error: function(){
						   alert('server not responding');
						},
						success: function( response ) {
							var data = jQuery.parseJSON(response);
							if(data.new_status){
							}else{
							}
						}
				});
				
				e.preventDefault();
			});

		</script>
	<?php
	}
}

if (!function_exists('ual_user_visit_activity2')):

	function ual_user_visit_activity2(){
		
		// $logHookList = get_option('enableLogHookList');
		// if (in_array('wp_head',$logHookList)) {
			global $post, $wpdb, $current_user, $wp_query;
			
			$current_user = wp_get_current_user();
			
			if( is_user_logged_in() && !is_admin()){
				
				$url = home_url(add_query_arg(array()));
				
				?>
				<script>
					// var start;

					jQuery(document).ready(function(){
					  window.onload = function(){
						  
						  time = new Date();
						  // var d = new Date();
						  // start = d.getTime();
					  }
				  
					  jQuery(window).unload(function(){
						  timeSite = new Date() - time;
						  // end = d.getTime();
						  
						  var data = {
								action: 'update_your_activity',
								// 'curr_val': curr_val,                    
								'url': '<?php echo $url ?>',
								// 'timeSpent': end - start,
								'timeSpent': timeSite,
								
							};
						  
						  jQuery.ajax({
							type: "POST",
							url: lastword.ajaxurl,
							timeout: 30000,
							data : data,
							cache: false,
							error: function(){
							   // alert('server not responding!');
							},
							success: function( response ) {
								var data = jQuery.parseJSON(response);
								if(data.new_status){
								}else{
								}
							}
						  });
						  
						  // alert('Bye now!');
						  
						  // return "Bye now!";
					   });
					});
					
				</script>
				<?php
			
			}	
		// }
		
	}

endif;

// add_action('wp_footer', 'ual_user_visit_activity2');